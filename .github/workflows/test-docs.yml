name: Test Documentation Build

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-pages.yml'
      - '.github/workflows/test-docs.yml'

jobs:
  test-docs-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: docs

      - name: Test Jekyll build
        run: |
          cd docs
          bundle exec jekyll build --verbose
        env:
          JEKYLL_ENV: production

      - name: Test for broken links (optional)
        run: |
          cd docs
          # Install htmlproofer for link checking
          gem install html-proofer
          # Check for broken internal links (skip external links to avoid rate limiting)
          htmlproofer ./_site --disable-external --check-html --check-img-http --check-favicon --allow-hash-href
        continue-on-error: true

      - name: Comment on PR with build status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('üìñ Documentation Build Status')
            );

            const body = `üìñ **Documentation Build Status**

            ‚úÖ Jekyll build completed successfully!
            
            The documentation site will be updated when this PR is merged to main.
            
            - Jekyll build: ‚úÖ Passed
            - Link check: ‚ö†Ô∏è Skipped (internal links only)
            
            [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
