{
  "openapi": "3.1.0",
  "info": {
    "title": "Inventory-App",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "security": [
    {
      "http": []
    }
  ],
  "paths": {
    "/address": {
      "get": {
        "operationId": "address.index",
        "summary": "Display a listing of addresses",
        "tags": ["Address"],
        "responses": {
          "200": {
            "description": "Array of `AddressResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddressResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "address.store",
        "summary": "Store a newly created address",
        "tags": ["Address"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "address": {
                          "type": "string"
                        },
                        "description": {
                          "type": ["string", "null"]
                        }
                      },
                      "required": ["language_id", "address"]
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`AddressResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/address/{address}": {
      "get": {
        "operationId": "address.show",
        "summary": "Display the specified address",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`AddressResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "address.update",
        "summary": "Update the specified address",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "address": {
                          "type": "string"
                        },
                        "description": {
                          "type": ["string", "null"]
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`AddressResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "address.destroy",
        "summary": "Remove the specified address",
        "tags": ["Address"],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The address ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/address-translation": {
      "get": {
        "operationId": "address-translation.index",
        "summary": "Display a listing of the resource",
        "tags": ["AddressTranslation"],
        "responses": {
          "200": {
            "description": "Array of `AddressTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddressTranslationResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "address-translation.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["AddressTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                },
                "required": ["address_id", "language_id", "address"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`AddressTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/address-translation/{addressTranslation}": {
      "get": {
        "operationId": "address-translation.show",
        "summary": "Display the specified resource",
        "tags": ["AddressTranslation"],
        "parameters": [
          {
            "name": "addressTranslation",
            "in": "path",
            "required": true,
            "description": "The address translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`AddressTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "address-translation.update",
        "summary": "Update the specified resource in storage",
        "tags": ["AddressTranslation"],
        "parameters": [
          {
            "name": "addressTranslation",
            "in": "path",
            "required": true,
            "description": "The address translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`AddressTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AddressTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "address-translation.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["AddressTranslation"],
        "parameters": [
          {
            "name": "addressTranslation",
            "in": "path",
            "required": true,
            "description": "The address translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/available-image/{availableImage}/download": {
      "get": {
        "operationId": "available-image.download",
        "summary": "Returns the file to the caller",
        "tags": ["AvailableImage"],
        "parameters": [
          {
            "name": "availableImage",
            "in": "path",
            "required": true,
            "description": "The available image ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/available-image/{availableImage}/view": {
      "get": {
        "operationId": "available-image.view",
        "summary": "Returns the image file for direct viewing (e.g., for use in <img> src attribute)",
        "tags": ["AvailableImage"],
        "parameters": [
          {
            "name": "availableImage",
            "in": "path",
            "required": true,
            "description": "The available image ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/available-image": {
      "get": {
        "operationId": "available-image.index",
        "summary": "Display a listing of the resource",
        "tags": ["AvailableImage"],
        "responses": {
          "200": {
            "description": "Array of `AvailableImageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailableImageResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/available-image/{availableImage}": {
      "get": {
        "operationId": "available-image.show",
        "summary": "Display the specified resource",
        "tags": ["AvailableImage"],
        "parameters": [
          {
            "name": "availableImage",
            "in": "path",
            "required": true,
            "description": "The available image ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`AvailableImageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AvailableImageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "available-image.update",
        "summary": "Update the specified resource in storage",
        "tags": ["AvailableImage"],
        "parameters": [
          {
            "name": "availableImage",
            "in": "path",
            "required": true,
            "description": "The available image ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`AvailableImageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/AvailableImageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "available-image.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["AvailableImage"],
        "parameters": [
          {
            "name": "availableImage",
            "in": "path",
            "required": true,
            "description": "The available image ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/contact": {
      "get": {
        "operationId": "contact.index",
        "summary": "Display a listing of contacts",
        "tags": ["Contact"],
        "responses": {
          "200": {
            "description": "Array of `ContactResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContactResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "contact.store",
        "summary": "Store a newly created contact",
        "tags": ["Contact"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": ["string", "null"]
                  },
                  "fax_number": {
                    "type": ["string", "null"]
                  },
                  "email": {
                    "type": ["string", "null"],
                    "format": "email"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "label": {
                          "type": "string"
                        }
                      },
                      "required": ["language_id", "label"]
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "translations"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`ContactResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/contact/{contact}": {
      "get": {
        "operationId": "contact.show",
        "summary": "Display the specified contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "description": "The contact ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ContactResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "contact.update",
        "summary": "Update the specified contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "description": "The contact ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": ["string", "null"]
                  },
                  "fax_number": {
                    "type": ["string", "null"]
                  },
                  "email": {
                    "type": ["string", "null"],
                    "format": "email"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "label": {
                          "type": "string"
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContactResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "contact.destroy",
        "summary": "Remove the specified contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "name": "contact",
            "in": "path",
            "required": true,
            "description": "The contact ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/contact-translation": {
      "get": {
        "operationId": "contact-translation.index",
        "summary": "Display a listing of the resource",
        "tags": ["ContactTranslation"],
        "responses": {
          "200": {
            "description": "Array of `ContactTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContactTranslationResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "contact-translation.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["ContactTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": ["contact_id", "language_id", "label"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContactTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/contact-translation/{contactTranslation}": {
      "get": {
        "operationId": "contact-translation.show",
        "summary": "Display the specified resource",
        "tags": ["ContactTranslation"],
        "parameters": [
          {
            "name": "contactTranslation",
            "in": "path",
            "required": true,
            "description": "The contact translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ContactTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "contact-translation.update",
        "summary": "Update the specified resource in storage",
        "tags": ["ContactTranslation"],
        "parameters": [
          {
            "name": "contactTranslation",
            "in": "path",
            "required": true,
            "description": "The contact translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contact_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContactTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContactTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "contact-translation.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["ContactTranslation"],
        "parameters": [
          {
            "name": "contactTranslation",
            "in": "path",
            "required": true,
            "description": "The contact translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/context/{context}/default": {
      "patch": {
        "operationId": "context.setDefault",
        "summary": "Set a context as the default one",
        "tags": ["Context"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "description": "The context ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["is_default"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContextResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/context/default": {
      "get": {
        "operationId": "context.getDefault",
        "summary": "Get the default context",
        "tags": ["Context"],
        "responses": {
          "200": {
            "description": "`ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContextResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["No default context found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/context": {
      "get": {
        "operationId": "context.index",
        "summary": "Display a listing of the resource",
        "tags": ["Context"],
        "responses": {
          "200": {
            "description": "Array of `ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContextResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "context.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Context"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContextResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/context/{context}": {
      "get": {
        "operationId": "context.show",
        "summary": "Display the specified resource",
        "tags": ["Context"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "description": "The context ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContextResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "context.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Context"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "description": "The context ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ContextResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ContextResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "context.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Context"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "required": true,
            "description": "The context ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/country": {
      "get": {
        "operationId": "country.index",
        "summary": "Display a listing of the resource",
        "tags": ["Country"],
        "responses": {
          "200": {
            "description": "Array of `CountryResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CountryResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "country.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Country"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "minLength": 2,
                    "maxLength": 2
                  }
                },
                "required": ["id", "internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`CountryResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CountryResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/country/{country}": {
      "get": {
        "operationId": "country.show",
        "summary": "Display the specified resource",
        "tags": ["Country"],
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "required": true,
            "description": "The country ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`CountryResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CountryResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "country.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Country"],
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "required": true,
            "description": "The country ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "minLength": 2,
                    "maxLength": 2
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`CountryResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CountryResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "country.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Country"],
        "parameters": [
          {
            "name": "country",
            "in": "path",
            "required": true,
            "description": "The country ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/detail": {
      "get": {
        "operationId": "detail.index",
        "summary": "Display a listing of the resource",
        "tags": ["Detail"],
        "responses": {
          "200": {
            "description": "Array of `DetailResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DetailResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "detail.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Detail"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  }
                },
                "required": ["item_id", "internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`DetailResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DetailResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/detail/{detail}": {
      "get": {
        "operationId": "detail.show",
        "summary": "Display the specified resource",
        "tags": ["Detail"],
        "parameters": [
          {
            "name": "detail",
            "in": "path",
            "required": true,
            "description": "The detail ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`DetailResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DetailResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "detail.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Detail"],
        "parameters": [
          {
            "name": "detail",
            "in": "path",
            "required": true,
            "description": "The detail ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  }
                },
                "required": ["item_id", "internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`DetailResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DetailResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "detail.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Detail"],
        "parameters": [
          {
            "name": "detail",
            "in": "path",
            "required": true,
            "description": "The detail ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/detail-translation": {
      "get": {
        "operationId": "detail-translation.index",
        "summary": "Display a listing of detail translations",
        "tags": ["Detail Translations", "DetailTranslation"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetailTranslationResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "detail-translation.store",
        "summary": "Store a newly created detail translation",
        "tags": ["Detail Translations", "DetailTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detail_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "context_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "alternate_name": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "author_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "text_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translator_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translation_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "extra": {
                    "type": ["array", "null"],
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["detail_id", "language_id", "context_id", "name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [201]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/detail-translation/{detailTranslation}": {
      "get": {
        "operationId": "detail-translation.show",
        "summary": "Display the specified detail translation",
        "tags": ["Detail Translations", "DetailTranslation"],
        "parameters": [
          {
            "name": "detailTranslation",
            "in": "path",
            "required": true,
            "description": "The detail translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`DetailTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DetailTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "detail-translation.update",
        "summary": "Update the specified detail translation",
        "tags": ["Detail Translations", "DetailTranslation"],
        "parameters": [
          {
            "name": "detailTranslation",
            "in": "path",
            "required": true,
            "description": "The detail translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detail_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "context_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "alternate_name": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "author_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "text_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translator_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translation_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "extra": {
                    "type": ["array", "null"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`DetailTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/DetailTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "detail-translation.destroy",
        "summary": "Remove the specified detail translation",
        "tags": ["Detail Translations", "DetailTranslation"],
        "parameters": [
          {
            "name": "detailTranslation",
            "in": "path",
            "required": true,
            "description": "The detail translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [204]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/image-upload": {
      "get": {
        "operationId": "image-upload.index",
        "summary": "Display a listing of the resource",
        "tags": ["ImageUpload"],
        "responses": {
          "200": {
            "description": "Array of `ImageUploadResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ImageUploadResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "image-upload.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["ImageUpload"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ImageUploadResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageUploadResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/image-upload/{imageUpload}": {
      "get": {
        "operationId": "image-upload.show",
        "summary": "Display the specified resource",
        "tags": ["ImageUpload"],
        "parameters": [
          {
            "name": "imageUpload",
            "in": "path",
            "required": true,
            "description": "The image upload ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ImageUploadResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImageUploadResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "image-upload.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["ImageUpload"],
        "parameters": [
          {
            "name": "imageUpload",
            "in": "path",
            "required": true,
            "description": "The image upload ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item": {
      "get": {
        "operationId": "item.index",
        "summary": "Display a listing of the resource",
        "tags": ["Item"],
        "responses": {
          "200": {
            "description": "Array of `ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "item.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Item"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "partner_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["object", "monument"]
                  },
                  "country_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "project_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  }
                },
                "required": ["internal_name", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item/{item}": {
      "get": {
        "operationId": "item.show",
        "summary": "Display the specified resource",
        "tags": ["Item"],
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "description": "The item ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "item.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Item"],
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "description": "The item ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "partner_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["object", "monument"]
                  },
                  "country_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "project_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  }
                },
                "required": ["internal_name", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "item.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Item"],
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "description": "The item ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item/{item}/tags": {
      "patch": {
        "operationId": "item.updateTags",
        "description": "This endpoint allows quick editing of tag associations by specifying which tags\nto attach or detach from the item. It provides fine-grained control over tag\noperations without requiring a full item update.",
        "summary": "Update tags for the specified item without modifying other item properties",
        "tags": ["Item"],
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "description": "- The item to update tags for",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attach": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "detach": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item/for-tag/{tag}": {
      "get": {
        "operationId": "item.forTag",
        "summary": "Get items for a specific tag",
        "tags": ["Item"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item/with-all-tags": {
      "post": {
        "operationId": "item.withAllTags",
        "summary": "Get items that have ALL of the specified tags (AND condition)",
        "tags": ["Item"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1
                  }
                },
                "required": ["tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of `ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item/with-any-tags": {
      "post": {
        "operationId": "item.withAnyTags",
        "summary": "Get items that have ANY of the specified tags (OR condition)",
        "tags": ["Item"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "minItems": 1
                  }
                },
                "required": ["tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of `ItemResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ItemResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item-translation": {
      "get": {
        "operationId": "item-translation.index",
        "summary": "Display a listing of item translations",
        "tags": ["Item Translations", "ItemTranslation"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTranslationResource"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "item-translation.store",
        "summary": "Store a newly created item translation",
        "tags": ["Item Translations", "ItemTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "context_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "alternate_name": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "holder": {
                    "type": ["string", "null"]
                  },
                  "owner": {
                    "type": ["string", "null"]
                  },
                  "initial_owner": {
                    "type": ["string", "null"]
                  },
                  "dates": {
                    "type": ["string", "null"]
                  },
                  "location": {
                    "type": ["string", "null"]
                  },
                  "dimensions": {
                    "type": ["string", "null"]
                  },
                  "place_of_production": {
                    "type": ["string", "null"]
                  },
                  "method_for_datation": {
                    "type": ["string", "null"]
                  },
                  "method_for_provenance": {
                    "type": ["string", "null"]
                  },
                  "obtention": {
                    "type": ["string", "null"]
                  },
                  "bibliography": {
                    "type": ["string", "null"]
                  },
                  "author_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "text_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translator_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translation_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "extra": {
                    "type": ["array", "null"],
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["item_id", "language_id", "context_id", "name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [201]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/item-translation/{itemTranslation}": {
      "get": {
        "operationId": "item-translation.show",
        "summary": "Display the specified item translation",
        "tags": ["Item Translations", "ItemTranslation"],
        "parameters": [
          {
            "name": "itemTranslation",
            "in": "path",
            "required": true,
            "description": "The item translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ItemTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "item-translation.update",
        "summary": "Update the specified item translation",
        "tags": ["Item Translations", "ItemTranslation"],
        "parameters": [
          {
            "name": "itemTranslation",
            "in": "path",
            "required": true,
            "description": "The item translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "context_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "alternate_name": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "type": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "holder": {
                    "type": ["string", "null"]
                  },
                  "owner": {
                    "type": ["string", "null"]
                  },
                  "initial_owner": {
                    "type": ["string", "null"]
                  },
                  "dates": {
                    "type": ["string", "null"]
                  },
                  "location": {
                    "type": ["string", "null"]
                  },
                  "dimensions": {
                    "type": ["string", "null"]
                  },
                  "place_of_production": {
                    "type": ["string", "null"]
                  },
                  "method_for_datation": {
                    "type": ["string", "null"]
                  },
                  "method_for_provenance": {
                    "type": ["string", "null"]
                  },
                  "obtention": {
                    "type": ["string", "null"]
                  },
                  "bibliography": {
                    "type": ["string", "null"]
                  },
                  "author_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "text_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translator_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "translation_copy_editor_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "maxLength": 255
                  },
                  "extra": {
                    "type": ["array", "null"],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ItemTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ItemTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "item-translation.destroy",
        "summary": "Remove the specified item translation",
        "tags": ["Item Translations", "ItemTranslation"],
        "parameters": [
          {
            "name": "itemTranslation",
            "in": "path",
            "required": true,
            "description": "The item translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [204]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/language/{language}/default": {
      "patch": {
        "operationId": "language.setDefault",
        "summary": "Set a Language as the default one",
        "tags": ["Language"],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "description": "The language ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["is_default"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/language/default": {
      "get": {
        "operationId": "language.getDefault",
        "summary": "Get the default Language",
        "tags": ["Language"],
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["No default language found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/language/english": {
      "get": {
        "operationId": "language.getEnglish",
        "summary": "Get the english Language",
        "tags": ["Language"],
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": ["No English language found"]
                    }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/language": {
      "get": {
        "operationId": "language.index",
        "summary": "Display a listing of the resource",
        "tags": ["Language"],
        "responses": {
          "200": {
            "description": "Array of `LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LanguageResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "language.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Language"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["id", "internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/language/{language}": {
      "get": {
        "operationId": "language.show",
        "summary": "Display the specified resource",
        "tags": ["Language"],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "description": "The language ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "language.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Language"],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "description": "The language ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"],
                    "minLength": 2,
                    "maxLength": 2
                  },
                  "is_default": {
                    "type": "boolean"
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LanguageResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LanguageResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "language.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Language"],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "description": "The language ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/location": {
      "get": {
        "operationId": "location.index",
        "summary": "Display a listing of locations",
        "tags": ["Location"],
        "responses": {
          "200": {
            "description": "Array of `LocationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocationResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "location.store",
        "summary": "Store a newly created location",
        "tags": ["Location"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": ["language_id", "name"]
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id", "translations"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`LocationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/location/{location}": {
      "get": {
        "operationId": "location.show",
        "summary": "Display the specified location",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`LocationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "location.update",
        "summary": "Update the specified location",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LocationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "location.destroy",
        "summary": "Remove the specified location",
        "tags": ["Location"],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "description": "The location ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/location-translation": {
      "get": {
        "operationId": "location-translation.index",
        "summary": "Display a listing of the resource",
        "tags": ["LocationTranslation"],
        "responses": {
          "200": {
            "description": "Array of `LocationTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocationTranslationResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "location-translation.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["LocationTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                },
                "required": ["location_id", "language_id", "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LocationTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/location-translation/{locationTranslation}": {
      "get": {
        "operationId": "location-translation.show",
        "summary": "Display the specified resource",
        "tags": ["LocationTranslation"],
        "parameters": [
          {
            "name": "locationTranslation",
            "in": "path",
            "required": true,
            "description": "The location translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`LocationTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "location-translation.update",
        "summary": "Update the specified resource in storage",
        "tags": ["LocationTranslation"],
        "parameters": [
          {
            "name": "locationTranslation",
            "in": "path",
            "required": true,
            "description": "The location translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`LocationTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/LocationTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "location-translation.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["LocationTranslation"],
        "parameters": [
          {
            "name": "locationTranslation",
            "in": "path",
            "required": true,
            "description": "The location translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/markdown/to-html": {
      "post": {
        "operationId": "markdown.toHtml",
        "description": "Converts Markdown formatted text to HTML for display purposes.\nThe input is validated to ensure it contains safe Markdown content.",
        "summary": "Convert Markdown to HTML",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markdown": {
                    "type": "string"
                  }
                },
                "required": ["markdown"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [200]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/markdown/from-html": {
      "post": {
        "operationId": "markdown.fromHtml",
        "description": "Converts HTML content to Markdown format with controlled tag support.\nOnly allowed HTML tags will be processed, others will be stripped.",
        "summary": "Convert HTML to Markdown",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "html": {
                    "type": "string",
                    "maxLength": 65535
                  }
                },
                "required": ["html"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [200]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/markdown/validate": {
      "post": {
        "operationId": "markdown.validate",
        "description": "Validates Markdown content without converting it, useful for form validation.",
        "summary": "Validate Markdown content",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "markdown": {
                    "type": "string"
                  }
                },
                "required": ["markdown"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [200]
                }
              }
            }
          }
        }
      }
    },
    "/markdown/preview": {
      "post": {
        "operationId": "markdown.preview",
        "description": "Generates an HTML preview of Markdown content for display purposes.\nThis is essentially the same as markdownToHtml but with a different semantic meaning.",
        "summary": "Preview Markdown content",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "responses": {
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": ["Failed to convert markdown to HTML"]
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message", "error"]
                }
              }
            }
          },
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "html": {
                          "type": "string"
                        }
                      },
                      "required": ["html"]
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "enum": ["Validation failed"]
                    },
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["success", "message", "errors"]
                }
              }
            }
          }
        }
      }
    },
    "/markdown/is-markdown": {
      "post": {
        "operationId": "markdown.isMarkdown",
        "description": "Analyzes content to determine if it appears to contain Markdown formatting.\nUseful for automatic detection of content type.",
        "summary": "Check if content is Markdown",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [200]
                }
              }
            }
          }
        }
      }
    },
    "/markdown/allowed-elements": {
      "get": {
        "operationId": "markdown.allowedElements",
        "description": "Returns the list of HTML tags that are supported for HTML-to-Markdown conversion.",
        "summary": "Get allowed HTML tags",
        "tags": ["Markdown\n\nAPI endpoints for Markdown processing and conversion", "Markdown"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "enum": [200]
                }
              }
            }
          }
        }
      }
    },
    "/mobile/acquire-token": {
      "post": {
        "operationId": "token.acquire",
        "summary": "Acquire a token for the user",
        "tags": ["MobileAppAuthentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  },
                  "device_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "wipe_tokens": {
                    "type": "boolean"
                  }
                },
                "required": ["email", "password", "device_name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        },
        "security": []
      }
    },
    "/mobile/wipe": {
      "get": {
        "operationId": "token.wipe",
        "summary": "Revoke all the token for the current user",
        "tags": ["MobileAppAuthentication"],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/partner": {
      "get": {
        "operationId": "partner.index",
        "summary": "Display a listing of the resource",
        "tags": ["Partner"],
        "responses": {
          "200": {
            "description": "Array of `PartnerResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PartnerResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "partner.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Partner"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["museum", "institution", "individual"]
                  },
                  "country_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  }
                },
                "required": ["internal_name", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PartnerResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PartnerResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/partner/{partner}": {
      "get": {
        "operationId": "partner.show",
        "summary": "Display the specified resource",
        "tags": ["Partner"],
        "parameters": [
          {
            "name": "partner",
            "in": "path",
            "required": true,
            "description": "The partner ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`PartnerResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PartnerResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "partner.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Partner"],
        "parameters": [
          {
            "name": "partner",
            "in": "path",
            "required": true,
            "description": "The partner ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "type": {
                    "type": "string",
                    "enum": ["museum", "institution", "individual"]
                  },
                  "country_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  }
                },
                "required": ["internal_name", "type"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PartnerResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PartnerResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "partner.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Partner"],
        "parameters": [
          {
            "name": "partner",
            "in": "path",
            "required": true,
            "description": "The partner ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/picture": {
      "get": {
        "operationId": "picture.index",
        "summary": "Display a listing of the resource",
        "tags": ["Picture"],
        "responses": {
          "200": {
            "description": "Array of `PictureResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PictureResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "picture.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Picture"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream",
                    "maxLength": 16384
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "copyright_text": {
                    "type": ["string", "null"]
                  },
                  "copyright_url": {
                    "type": ["string", "null"],
                    "format": "uri"
                  }
                },
                "required": ["file", "internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PictureResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PictureResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/picture/{picture}": {
      "get": {
        "operationId": "picture.show",
        "summary": "Display the specified resource",
        "tags": ["Picture"],
        "parameters": [
          {
            "name": "picture",
            "in": "path",
            "required": true,
            "description": "The picture ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`PictureResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PictureResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "picture.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Picture"],
        "parameters": [
          {
            "name": "picture",
            "in": "path",
            "required": true,
            "description": "The picture ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "copyright_text": {
                    "type": ["string", "null"]
                  },
                  "copyright_url": {
                    "type": ["string", "null"],
                    "format": "uri"
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PictureResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PictureResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "picture.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Picture"],
        "parameters": [
          {
            "name": "picture",
            "in": "path",
            "required": true,
            "description": "The picture ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/project/{project}/launched": {
      "patch": {
        "operationId": "project.setLaunched",
        "summary": "Toggle Launched/not-launched on a project",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "launch_date": {
                    "type": ["string", "null"],
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/project/{project}/enabled": {
      "patch": {
        "operationId": "project.setEnabled",
        "summary": "Toggle Enable/disable on a project",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_enabled": {
                    "type": "boolean"
                  }
                },
                "required": ["is_enabled"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/project/enabled": {
      "get": {
        "operationId": "project.enabled",
        "summary": "Get all enabled projects (Enabled + launched)",
        "tags": ["Project"],
        "responses": {
          "200": {
            "description": "Array of `ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/project": {
      "get": {
        "operationId": "project.index",
        "summary": "Display a listing of the resource",
        "tags": ["Project"],
        "responses": {
          "200": {
            "description": "Array of `ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "project.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Project"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "launch_date": {
                    "type": ["string", "null"],
                    "format": "date-time"
                  },
                  "is_launched": {
                    "type": "boolean"
                  },
                  "is_enabled": {
                    "type": "boolean"
                  },
                  "context_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/project/{project}": {
      "get": {
        "operationId": "project.show",
        "summary": "Display the specified resource",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "project.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "launch_date": {
                    "type": ["string", "null"],
                    "format": "date-time"
                  },
                  "is_launched": {
                    "type": "boolean"
                  },
                  "is_enabled": {
                    "type": "boolean"
                  },
                  "context_id": {
                    "type": ["string", "null"],
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": ["string", "null"],
                    "minLength": 3,
                    "maxLength": 3
                  }
                },
                "required": ["internal_name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProjectResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProjectResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "project.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Project"],
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "description": "The project ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/province": {
      "get": {
        "operationId": "province.index",
        "summary": "Display a listing of provinces",
        "tags": ["Province"],
        "responses": {
          "200": {
            "description": "Array of `ProvinceResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProvinceResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "province.store",
        "summary": "Store a newly created province",
        "tags": ["Province"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": ["language_id", "name"]
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id", "translations"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "`ProvinceResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/province/{province}": {
      "get": {
        "operationId": "province.show",
        "summary": "Display the specified province",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ProvinceResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "province.update",
        "summary": "Update the specified province",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "country_id": {
                    "type": "integer"
                  },
                  "translations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "language_id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "minItems": 1
                  }
                },
                "required": ["internal_name", "country_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProvinceResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string"
                    }
                  },
                  "required": ["errors"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "province.destroy",
        "summary": "Remove the specified province",
        "tags": ["Province"],
        "parameters": [
          {
            "name": "province",
            "in": "path",
            "required": true,
            "description": "The province ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/province-translation": {
      "get": {
        "operationId": "province-translation.index",
        "summary": "Display a listing of the resource",
        "tags": ["ProvinceTranslation"],
        "responses": {
          "200": {
            "description": "Array of `ProvinceTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProvinceTranslationResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "province-translation.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["ProvinceTranslation"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "province_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                },
                "required": ["province_id", "language_id", "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProvinceTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/province-translation/{provinceTranslation}": {
      "get": {
        "operationId": "province-translation.show",
        "summary": "Display the specified resource",
        "tags": ["ProvinceTranslation"],
        "parameters": [
          {
            "name": "provinceTranslation",
            "in": "path",
            "required": true,
            "description": "The province translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`ProvinceTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "province-translation.update",
        "summary": "Update the specified resource in storage",
        "tags": ["ProvinceTranslation"],
        "parameters": [
          {
            "name": "provinceTranslation",
            "in": "path",
            "required": true,
            "description": "The province translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "province_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "language_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`ProvinceTranslationResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProvinceTranslationResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "province-translation.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["ProvinceTranslation"],
        "parameters": [
          {
            "name": "provinceTranslation",
            "in": "path",
            "required": true,
            "description": "The province translation ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tag": {
      "get": {
        "operationId": "tag.index",
        "summary": "Display a listing of the resource",
        "tags": ["Tag"],
        "responses": {
          "200": {
            "description": "Array of `TagResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TagResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "tag.store",
        "summary": "Store a newly created resource in storage",
        "tags": ["Tag"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["internal_name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`TagResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TagResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tag/{tag}": {
      "get": {
        "operationId": "tag.show",
        "summary": "Display the specified resource",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`TagResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TagResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "tag.update",
        "summary": "Update the specified resource in storage",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "internal_name": {
                    "type": "string"
                  },
                  "backward_compatibility": {
                    "type": ["string", "null"]
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": ["internal_name", "description"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`TagResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/TagResource"
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "delete": {
        "operationId": "tag.destroy",
        "summary": "Remove the specified resource from storage",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "description": "The tag ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tag/for-item/{item}": {
      "get": {
        "operationId": "tag.forItem",
        "summary": "Get tags for a specific item",
        "tags": ["Tag"],
        "parameters": [
          {
            "name": "item",
            "in": "path",
            "required": true,
            "description": "The item ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `TagResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TagResource"
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "http": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AddressResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internal_name": {
            "type": "string"
          },
          "country_id": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": ["id", "internal_name", "country_id", "created_at", "updated_at"],
        "title": "AddressResource"
      },
      "AddressTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "address_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "description": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "address_id",
          "language_id",
          "address",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "AddressTranslationResource"
      },
      "ArtistResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "place_of_birth": {
            "type": ["string", "null"]
          },
          "place_of_death": {
            "type": ["string", "null"]
          },
          "date_of_birth": {
            "type": ["string", "null"]
          },
          "date_of_death": {
            "type": ["string", "null"]
          },
          "period_of_activity": {
            "type": ["string", "null"]
          },
          "internal_name": {
            "type": "string"
          },
          "backward_compatibility": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "place_of_birth",
          "place_of_death",
          "date_of_birth",
          "date_of_death",
          "period_of_activity",
          "internal_name",
          "backward_compatibility",
          "created_at",
          "updated_at"
        ],
        "title": "ArtistResource"
      },
      "AuthorResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "internal_name": {
            "type": ["string", "null"]
          },
          "backward_compatibility": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "internal_name",
          "backward_compatibility",
          "created_at",
          "updated_at"
        ],
        "title": "AuthorResource"
      },
      "AvailableImageResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the picture (GUID)"
          },
          "path": {
            "type": ["string", "null"],
            "description": "The path to the picture file"
          },
          "comment": {
            "type": ["string", "null"],
            "description": "A user defined comment associated with the file"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": ["id", "path", "comment", "created_at", "updated_at"],
        "title": "AvailableImageResource"
      },
      "ContactResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internal_name": {
            "type": "string"
          },
          "phone_number": {
            "type": ["string", "null"]
          },
          "formatted_phone_number": {
            "type": ["string", "null"]
          },
          "fax_number": {
            "type": ["string", "null"]
          },
          "formatted_fax_number": {
            "type": ["string", "null"]
          },
          "email": {
            "type": ["string", "null"]
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "internal_name",
          "phone_number",
          "formatted_phone_number",
          "fax_number",
          "formatted_fax_number",
          "email",
          "created_at",
          "updated_at"
        ],
        "title": "ContactResource"
      },
      "ContactTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contact_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": ["id", "contact_id", "language_id", "label", "created_at", "updated_at"],
        "title": "ContactTranslationResource"
      },
      "ContextResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the context (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the context, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this context corresponds to a legacy context from the MWNF3 database, nullable"
          },
          "is_default": {
            "type": "boolean",
            "description": "Indicates if this context is the default one. There is one single default context for the entire database."
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "is_default",
          "created_at",
          "updated_at"
        ],
        "title": "ContextResource"
      },
      "CountryResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the country (ISO 3166-1 alpha-3 code)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the country, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this country corresponds to a legacy country from the MWNF3 database, nullable"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": ["id", "internal_name", "backward_compatibility", "created_at", "updated_at"],
        "title": "CountryResource"
      },
      "DetailResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the item (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the item, it shall only be used internally"
          },
          "item": {
            "description": "The item this detail belongs to",
            "$ref": "#/components/schemas/ItemResource"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this item corresponds to a legacy item from the MWNF3 database, nullable"
          },
          "translations": {
            "type": "array",
            "description": "Translations for this detail (internationalization and contextualization)",
            "items": {
              "$ref": "#/components/schemas/DetailTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": ["id", "internal_name", "backward_compatibility", "created_at", "updated_at"],
        "title": "DetailResource"
      },
      "DetailTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "detail_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "context_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alternate_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": "string"
          },
          "author_id": {
            "type": ["string", "null"]
          },
          "text_copy_editor_id": {
            "type": ["string", "null"]
          },
          "translator_id": {
            "type": ["string", "null"]
          },
          "translation_copy_editor_id": {
            "type": ["string", "null"]
          },
          "backward_compatibility": {
            "type": ["string", "null"]
          },
          "extra": {
            "type": ["array", "null"],
            "items": {}
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "detail": {
            "description": "Relationship data",
            "$ref": "#/components/schemas/DetailResource"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageResource"
          },
          "context": {
            "$ref": "#/components/schemas/ContextResource"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "text_copy_editor": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "translator": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "translation_copy_editor": {
            "$ref": "#/components/schemas/AuthorResource"
          }
        },
        "required": [
          "id",
          "detail_id",
          "language_id",
          "context_id",
          "name",
          "alternate_name",
          "description",
          "author_id",
          "text_copy_editor_id",
          "translator_id",
          "translation_copy_editor_id",
          "backward_compatibility",
          "extra",
          "created_at",
          "updated_at"
        ],
        "title": "DetailTranslationResource"
      },
      "ImageUploadResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the picture (GUID)"
          },
          "path": {
            "type": ["string", "null"],
            "description": "The path to the picture file"
          },
          "name": {
            "type": ["string", "null"],
            "description": "The original name of the uploaded file"
          },
          "extension": {
            "type": ["string", "null"],
            "description": "The file extension of the uploaded file"
          },
          "mime_type": {
            "type": ["string", "null"],
            "description": "The MIME type of the uploaded file"
          },
          "size": {
            "type": ["integer", "null"],
            "description": "The size of the uploaded file in bytes"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "path",
          "name",
          "extension",
          "mime_type",
          "size",
          "created_at",
          "updated_at"
        ],
        "title": "ImageUploadResource"
      },
      "ItemResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the item (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the item, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this item corresponds to a legacy item from the MWNF3 database, nullable"
          },
          "type": {
            "type": "string",
            "description": "The type of the item, either 'object' or 'monument'"
          },
          "owner_reference": {
            "type": ["string", "null"],
            "description": "Owner's reference number for the item"
          },
          "mwnf_reference": {
            "type": ["string", "null"],
            "description": "MWNF reference number for the item"
          },
          "partner": {
            "description": "The partner owning the item",
            "$ref": "#/components/schemas/PartnerResource"
          },
          "project": {
            "description": "The project this item belongs to, nullable",
            "$ref": "#/components/schemas/ProjectResource"
          },
          "country": {
            "description": "The country this item is associated with, nullable",
            "$ref": "#/components/schemas/CountryResource"
          },
          "artists": {
            "type": "array",
            "description": "Artists associated with this item",
            "items": {
              "$ref": "#/components/schemas/ArtistResource"
            }
          },
          "workshops": {
            "type": "array",
            "description": "Workshops associated with this item",
            "items": {
              "$ref": "#/components/schemas/WorkshopResource"
            }
          },
          "tags": {
            "type": "array",
            "description": "Tags associated with this item",
            "items": {
              "$ref": "#/components/schemas/TagResource"
            }
          },
          "translations": {
            "type": "array",
            "description": "Translations for this item (internationalization and contextualization)",
            "items": {
              "$ref": "#/components/schemas/ItemTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "type",
          "owner_reference",
          "mwnf_reference",
          "artists",
          "workshops",
          "created_at",
          "updated_at"
        ],
        "title": "ItemResource"
      },
      "ItemTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "item_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "context_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alternate_name": {
            "type": ["string", "null"]
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": ["string", "null"]
          },
          "holder": {
            "type": ["string", "null"]
          },
          "owner": {
            "type": ["string", "null"]
          },
          "initial_owner": {
            "type": ["string", "null"]
          },
          "dates": {
            "type": ["string", "null"]
          },
          "location": {
            "type": ["string", "null"]
          },
          "dimensions": {
            "type": ["string", "null"]
          },
          "place_of_production": {
            "type": ["string", "null"]
          },
          "method_for_datation": {
            "type": ["string", "null"]
          },
          "method_for_provenance": {
            "type": ["string", "null"]
          },
          "obtention": {
            "type": ["string", "null"]
          },
          "bibliography": {
            "type": ["string", "null"]
          },
          "author_id": {
            "type": ["string", "null"]
          },
          "text_copy_editor_id": {
            "type": ["string", "null"]
          },
          "translator_id": {
            "type": ["string", "null"]
          },
          "translation_copy_editor_id": {
            "type": ["string", "null"]
          },
          "backward_compatibility": {
            "type": ["string", "null"]
          },
          "extra": {
            "type": ["array", "null"],
            "items": {}
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "item": {
            "description": "Relationship data",
            "$ref": "#/components/schemas/ItemResource"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageResource"
          },
          "context": {
            "$ref": "#/components/schemas/ContextResource"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "text_copy_editor": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "translator": {
            "$ref": "#/components/schemas/AuthorResource"
          },
          "translation_copy_editor": {
            "$ref": "#/components/schemas/AuthorResource"
          }
        },
        "required": [
          "id",
          "item_id",
          "language_id",
          "context_id",
          "name",
          "alternate_name",
          "description",
          "type",
          "holder",
          "owner",
          "initial_owner",
          "dates",
          "location",
          "dimensions",
          "place_of_production",
          "method_for_datation",
          "method_for_provenance",
          "obtention",
          "bibliography",
          "author_id",
          "text_copy_editor_id",
          "translator_id",
          "translation_copy_editor_id",
          "backward_compatibility",
          "extra",
          "created_at",
          "updated_at"
        ],
        "title": "ItemTranslationResource"
      },
      "LanguageResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the language (ISO 639-1 code)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the language, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this language corresponds to a legacy language from the MWNF3 database, nullable"
          },
          "is_default": {
            "type": "boolean",
            "description": "Indicates if this language is the default one. There is one single default language for the entire database."
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "is_default",
          "created_at",
          "updated_at"
        ],
        "title": "LanguageResource"
      },
      "LocationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internal_name": {
            "type": "string"
          },
          "country_id": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": ["id", "internal_name", "country_id", "created_at", "updated_at"],
        "title": "LocationResource"
      },
      "LocationTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "location_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "location_id",
          "language_id",
          "name",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "LocationTranslationResource"
      },
      "PartnerResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the partner (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the partner, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this partner corresponds to a legacy partner from the MWNF3 database, nullable"
          },
          "type": {
            "type": "string",
            "description": "The type of the partner, either 'museum',  'institution' or 'individual'"
          },
          "country": {
            "description": "The country this partner is associated with, nullable",
            "$ref": "#/components/schemas/CountryResource"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "type",
          "created_at",
          "updated_at"
        ],
        "title": "PartnerResource"
      },
      "PictureResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the picture (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The internal name of the picture"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this picture corresponds to a legacy image from the MWNF3 database, nullable"
          },
          "path": {
            "type": ["string", "null"],
            "description": "The path to the picture file"
          },
          "copyright_text": {
            "type": ["string", "null"],
            "description": "The copyright text associated with the picture"
          },
          "copyright_url": {
            "type": ["string", "null"],
            "description": "The URL for the copyright information"
          },
          "upload_name": {
            "type": ["string", "null"],
            "description": "The original name of the uploaded file"
          },
          "upload_extension": {
            "type": ["string", "null"],
            "description": "The file extension of the uploaded file"
          },
          "upload_mime_type": {
            "type": ["string", "null"],
            "description": "The MIME type of the uploaded file"
          },
          "upload_size": {
            "type": ["integer", "null"],
            "description": "The size of the uploaded file in bytes"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "path",
          "copyright_text",
          "copyright_url",
          "upload_name",
          "upload_extension",
          "upload_mime_type",
          "upload_size",
          "created_at",
          "updated_at"
        ],
        "title": "PictureResource"
      },
      "ProjectResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the project (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the project, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this project corresponds to a legacy project from the MWNF3 database, nullable"
          },
          "launch_date": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Launch date of the project, nullable"
          },
          "is_launched": {
            "type": "boolean",
            "description": "Indicates if the project has been launched already"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "Indicates if the project is enabled (active)"
          },
          "context": {
            "description": "The default context used within the project",
            "$ref": "#/components/schemas/ContextResource"
          },
          "language": {
            "description": "The default language used within the project",
            "$ref": "#/components/schemas/LanguageResource"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "launch_date",
          "is_launched",
          "is_enabled",
          "created_at",
          "updated_at"
        ],
        "title": "ProjectResource"
      },
      "ProvinceResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internal_name": {
            "type": "string"
          },
          "country_id": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvinceTranslationResource"
            }
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": ["id", "internal_name", "country_id", "created_at", "updated_at"],
        "title": "ProvinceResource"
      },
      "ProvinceTranslationResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "province_id": {
            "type": "string"
          },
          "language_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "province_id",
          "language_id",
          "name",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "ProvinceTranslationResource"
      },
      "TagResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the tag (GUID)"
          },
          "internal_name": {
            "type": "string",
            "description": "The name of the tag, it shall only be used internally"
          },
          "backward_compatibility": {
            "type": ["string", "null"],
            "description": "The legacy Id when this tag corresponds to a legacy tag from the previous database, nullable"
          },
          "description": {
            "type": "string",
            "description": "The description of the tag"
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of creation"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time",
            "description": "Date of last modification"
          }
        },
        "required": [
          "id",
          "internal_name",
          "backward_compatibility",
          "description",
          "created_at",
          "updated_at"
        ],
        "title": "TagResource"
      },
      "WorkshopResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "internal_name": {
            "type": "string"
          },
          "backward_compatibility": {
            "type": ["string", "null"]
          },
          "created_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "updated_at": {
            "type": ["string", "null"],
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemResource"
            }
          }
        },
        "required": [
          "id",
          "name",
          "internal_name",
          "backward_compatibility",
          "created_at",
          "updated_at"
        ],
        "title": "WorkshopResource"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": ["message", "errors"]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": ["message"]
            }
          }
        }
      }
    }
  }
}
